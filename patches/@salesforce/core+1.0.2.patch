diff --git a/node_modules/@salesforce/core/lib/config/configFile.js b/node_modules/@salesforce/core/lib/config/configFile.js
index 92d8a75..561118c 100644
--- a/node_modules/@salesforce/core/lib/config/configFile.js
+++ b/node_modules/@salesforce/core/lib/config/configFile.js
@@ -190,7 +190,7 @@ class ConfigFile extends configStore_1.BaseConfigStore {
             configRootFolder = path_1.join(configRootFolder, global_1.Global.STATE_FOLDER);
         }
         this.path = path_1.join(configRootFolder, this.options.filePath ? this.options.filePath : '', this.options.filename);
-        await this.read();
+        await this.read(true);
     }
 }
 exports.ConfigFile = ConfigFile;
diff --git a/node_modules/@salesforce/core/lib/org.js b/node_modules/@salesforce/core/lib/org.js
index f31dd3c..1e7dd80 100644
--- a/node_modules/@salesforce/core/lib/org.js
+++ b/node_modules/@salesforce/core/lib/org.js
@@ -337,8 +337,9 @@ class Org extends kit_1.AsyncCreatable {
                 this.options.aliasOrUsername = aliasOrUsername || undefined;
             }
             // If no username is provided AuthInfo will throw an SfdxError.
+            const aliasValue = await aliases_1.Aliases.fetch(this.options.aliasOrUsername);
             this.connection = await connection_1.Connection.create({
-                authInfo: await authInfo_1.AuthInfo.create({ username: this.options.aliasOrUsername })
+                authInfo: await authInfo_1.AuthInfo.create({ username: aliasValue || this.options.aliasOrUsername })
             });
         }
         else {
