patch-package
--- a/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sfdx-compile.js
@@ -10,14 +10,13 @@ const shell = require('../utils/shelljs');
 
 const exists = require('../utils/exists');
 const packageRoot = require('../utils/package-path');
-const tsc = require.resolve('typescript/bin/tsc');
 
-shell.exec(`${tsc} -p . --pretty`, {
+shell.exec('tsc -p . --pretty', {
   cwd: packageRoot
 });
 
 if (exists('./test')) {
-  shell.exec(`${tsc} -p ./test --pretty`, {
+  shell.exec('tsc -p ./test --pretty', {
     cwd: packageRoot
   });
 }
--- a/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sfdx-test.js
@@ -11,12 +11,10 @@ const shell = require('../utils/shelljs');
 const packageRoot = require('../utils/package-path');
 const SfdxDevConfig = require('../utils/sfdx-dev-config');
 
-const nyc = require.resolve('nyc/bin/nyc');
-
 const config = new SfdxDevConfig(packageRoot);
 const testConfig = config.get('test') || {};
 
-let command = `${nyc} mocha`;
+let command = 'nyc mocha';
 
 if (!testConfig.mochaOpts) {
   command +=
--- a/node_modules/@salesforce/dev-scripts/utils/standardize-pjson.js
+++ b/node_modules/@salesforce/dev-scripts/utils/standardize-pjson.js
@@ -36,7 +36,10 @@ module.exports = (packageRoot = require('./package-path'), inLernaProject) => {
       if (isLernaProject) {
         scripts[scriptName] = `lerna run ${scriptName}`;
       } else {
-        let scriptArgs = scriptFile.split('-');
+        let scriptArgs = [];
+        if (scriptFile) {
+          scriptArgs = scriptFile.replace(/\-/, '#').split('#');
+        }
         if (scriptArgs.length > 1) {
           const scriptFileName = scriptArgs[0];
           scriptArgs = scriptArgs.splice(1).join(' ');
--- a/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
+++ b/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
@@ -11,14 +11,24 @@ const SfdxDevConfig = require('./sfdx-dev-config');
 
 module.exports = (projectPath, inLernaProject) => {
   const pjson = new PackageJson(projectPath);
+  const pjson_devconfig = new PackageJson(process.cwd() + '/node_modules/@salesforce/dev-config');
 
   log(`Checking dependencies for ${pjson.name}`);
 
   const config = new SfdxDevConfig(projectPath);
   const dependencies = pjson.get('devDependencies');
+  const dependencies_devconfig = pjson_devconfig.get('dependencies');
 
   const added = [];
   const removed = [];
+  const synced = [];
+
+  const sync = name => {
+    if (dependencies[name] !== dependencies_devconfig[name]) {
+      synced.push(name + ' ' + dependencies[name] + ' => ' + dependencies_devconfig[name]);
+      dependencies[name] = dependencies_devconfig[name];
+    }
+  };
 
   const remove = name => {
     if (dependencies[name]) {
@@ -40,12 +50,15 @@ module.exports = (projectPath, inLernaProject) => {
 
   // Included by dev-scripts
   remove('nyc');
-  remove('typescript');
+  // remove('typescript');
+  sync('typescript')
   remove('ts-node');
   remove('@commitlint/cli');
   remove('@commitlint/config-conventional');
   remove('source-map-support');
-  remove('tslint');
+  // remove('tslint');
+  sync('tslint');
+  sync('tslint-microsoft-contrib');
   remove('xunit-file');
   remove('sinon');
   remove('mocha');
@@ -65,6 +78,11 @@ module.exports = (projectPath, inLernaProject) => {
     added.forEach(dep => log(dep, 2));
   }
 
+  if (synced.length > 0) {
+    log(`synced`);
+    synced.forEach(dep => log(dep, 2));
+  }
+
   pjson.write();
-  return added.length > 0;
+  return added.length > 0 || synced.length > 0;
 };
