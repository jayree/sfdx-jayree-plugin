diff --git a/node_modules/@oclif/dev-cli/lib/commands/readme.js b/node_modules/@oclif/dev-cli/lib/commands/readme.js
index 38f65a2..5be93d5 100644
--- a/node_modules/@oclif/dev-cli/lib/commands/readme.js
+++ b/node_modules/@oclif/dev-cli/lib/commands/readme.js
@@ -49,25 +49,28 @@ class Readme extends command_1.Command {
         return readme.replace(`<!-- ${tag} -->`, `<!-- ${tag} -->\n${body}\n<!-- ${tag}stop -->`);
     }
     toc(__, readme) {
-        return readme.split('\n').filter(l => l.startsWith('# '))
-            .map(l => l.trim().slice(2))
+        return readme.split('\n').filter(l => l.startsWith('## '))
+            .map(l => l.trim().slice(3))
             .map(l => `* [${l}](#${slugify.slug(l)})`)
             .join('\n');
     }
     usage(config) {
-        return [
-            `\`\`\`sh-session
-$ npm install -g ${config.name}
-$ ${config.bin} COMMAND
-running command...
-$ ${config.bin} (-v|--version|version)
-${config.name}/${process.env.OCLIF_NEXT_VERSION || config.version} ${process.platform}-${process.arch} node-v${process.versions.node}
-$ ${config.bin} --help [COMMAND]
+      let message = `\`\`\`sh-session
+$ ${config.bin} plugins:install ${config.name}`;
+      if (config.topics[0]) {
+        message += `\n$ ${config.bin} ${config.topics[0].name}:COMMAND
+running command...`;
+      }
+      message += `\n$ ${config.bin} plugins
+${config.name} ${process.env.OCLIF_NEXT_VERSION || config.version}`;
+      if (config.topics[0]) {
+        message += `\n$ ${config.bin} help ${config.topics[0].name}:COMMAND
 USAGE
-  $ ${config.bin} COMMAND
-...
-\`\`\`\n`,
-        ].join('\n').trim();
+  $ ${config.bin} ${config.topics[0].name}:COMMAND
+...`;
+      }
+      message += `\n\`\`\`\n`;
+      return [message].join('\n').trim();
     }
     multiCommands(config, commands, dir) {
         let topics = config.topics;
@@ -79,7 +82,7 @@ USAGE
             this.createTopicFile(path.join('.', dir, topic.name.replace(/:/g, '/') + '.md'), config, topic, commands.filter(c => c.id === topic.name || c.id.startsWith(topic.name + ':')));
         }
         return [
-            '# Command Topics\n',
+            '## Command Topics\n',
             ...topics.map(t => {
                 return util_1.compact([
                     `* [\`${config.bin} ${t.name}\`](${dir}/${t.name.replace(/:/g, '/')}.md)`,
@@ -104,7 +107,7 @@ USAGE
         return [
             ...commands.map(c => {
                 let usage = this.commandUsage(config, c);
-                return `* [\`${config.bin} ${usage}\`](#${slugify.slug(`${config.bin}-${usage}`)})`;
+                return `* [\`${config.bin} ${c.id}\`](#${slugify.slug(`${config.bin}-${c.id}`)})`;
             }),
             '',
             ...commands.map(c => this.renderCommand(config, c)).map(s => s.trim() + '\n'),
@@ -114,7 +117,7 @@ USAGE
         this.debug('rendering command', c.id);
         let title = util_1.template({ config, command: c })(c.description || '').trim().split('\n')[0];
         const help = new plugin_help_1.default(config, { stripAnsi: true, maxWidth: columns });
-        const header = () => `## \`${config.bin} ${this.commandUsage(config, c)}\``;
+        const header = () => `### \`${config.bin} ${c.id}\``;
         return util_1.compact([
             header(),
             title,
@@ -187,7 +190,7 @@ USAGE
             return;
         p = p.replace(plugin.root + path.sep, '');
         if (plugin.pjson.devDependencies.typescript) {
-            p = p.replace(libRegex, 'src' + path.sep);
+            p = p.replace(libRegex, '');
             p = p.replace(/\.js$/, '.ts');
         }
         return p;
@@ -213,9 +216,9 @@ USAGE
 }
 Readme.description = `adds commands to README.md in current directory
 The readme must have any of the following tags inside of it for it to be replaced or else it will do nothing:
-# Usage
+## Usage
 <!-- usage -->
-# Commands
+## Commands
 <!-- commands -->
 
 Customize the code URL prefix by setting oclif.repositoryPrefix in package.json.
