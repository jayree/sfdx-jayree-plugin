diff --git a/node_modules/@salesforce/dev-scripts/bin/sf-clean.js b/node_modules/@salesforce/dev-scripts/bin/sf-clean.js
index 90af01f..ff466a9 100755
--- a/node_modules/@salesforce/dev-scripts/bin/sf-clean.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sf-clean.js
@@ -38,7 +38,7 @@ if (gitignorePath) {
 
   // The first line of the segment is what we are looking for. Either # -- CLEAN or # -- CLEAN ALL
   if (segments['CLEAN']) {
-    toClean = segments['CLEAN'];
+    toClean = toClean.concat(segments['CLEAN']);
   } else {
     const example = join(__dirname, '..', 'files', '.gitignore');
     log(
@@ -48,7 +48,7 @@ if (gitignorePath) {
     );
   }
   if (segments['CLEAN ALL']) {
-    toCleanAll = segments['CLEAN ALL'];
+    toCleanAll = toCleanAll.concat(segments['CLEAN ALL']);
   }
 }
 
@@ -57,5 +57,6 @@ if (cleanAll) {
   toClean = [...toClean, ...toCleanAll];
 }
 
+toClean = [...new Set(toClean)]
 log(`rm -rf ${toClean}`);
 shell.rm('-rf', toClean);
diff --git a/node_modules/@salesforce/dev-scripts/bin/sf-docs.js b/node_modules/@salesforce/dev-scripts/bin/sf-docs.js
index d0695bb..7b083a4 100755
--- a/node_modules/@salesforce/dev-scripts/bin/sf-docs.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sf-docs.js
@@ -22,9 +22,6 @@ try {
 
 let outDir = 'docs';
 
-// preserve perf test files, which are also stored in gh-pages
-shell.exec(`find ./${outDir}/* -not -path './${outDir}/perf*' -delete`);
-
 outDir = join(packageRoot, outDir, 'tmp');
 
 let command = `yarn typedoc --out ${outDir}`;
diff --git a/node_modules/@salesforce/dev-scripts/bin/sf-install.js b/node_modules/@salesforce/dev-scripts/bin/sf-install.js
index 2e1a739..67d15b0 100755
--- a/node_modules/@salesforce/dev-scripts/bin/sf-install.js
+++ b/node_modules/@salesforce/dev-scripts/bin/sf-install.js
@@ -19,7 +19,8 @@ if (changed) {
 } else {
   require('../utils/standardize-pjson')();
   require('../utils/standardize-files')();
-  if (exists('.git')) {
+  const isCi = process.env.CI !== undefined;
+  if (exists('.git') && !isCi) {
     require('../utils/husky-init')();
   }
 }
diff --git a/node_modules/@salesforce/dev-scripts/files/mocharc.json b/node_modules/@salesforce/dev-scripts/files/mocharc.json
index 2e6bae4..6725c65 100644
--- a/node_modules/@salesforce/dev-scripts/files/mocharc.json
+++ b/node_modules/@salesforce/dev-scripts/files/mocharc.json
@@ -3,5 +3,6 @@
   "watch-extensions": "ts",
   "recursive": true,
   "reporter": "spec",
-  "timeout": 5000
+  "timeout": 5000,
+  "node-option": ["experimental-specifier-resolution=node", "loader=ts-node/esm", "no-warnings"]
 }
diff --git a/node_modules/@salesforce/dev-scripts/files/tsconfig-strict.json b/node_modules/@salesforce/dev-scripts/files/tsconfig-strict.json
index d4f6ee8..73ad6fa 100644
--- a/node_modules/@salesforce/dev-scripts/files/tsconfig-strict.json
+++ b/node_modules/@salesforce/dev-scripts/files/tsconfig-strict.json
@@ -5,7 +5,14 @@
   "extends": "@salesforce/dev-config/tsconfig-strict",
   "compilerOptions": {
     "outDir": "lib",
-    "incremental": true
+    "incremental": true,
+    "module": "node16",
+    "moduleResolution": "node16",
+    "allowSyntheticDefaultImports": true,
+    "skipLibCheck": true
+  },
+  "ts-node": {
+    "esm": true
   },
   "include": ["./src/**/*.ts"]
 }
diff --git a/node_modules/@salesforce/dev-scripts/files/tsconfig-test-strict.json b/node_modules/@salesforce/dev-scripts/files/tsconfig-test-strict.json
index 44147cc..25e4a7c 100644
--- a/node_modules/@salesforce/dev-scripts/files/tsconfig-test-strict.json
+++ b/node_modules/@salesforce/dev-scripts/files/tsconfig-test-strict.json
@@ -3,5 +3,8 @@
 
 {
   "extends": "@salesforce/dev-config/tsconfig-test-strict",
+  "compilerOptions": {
+    "skipLibCheck": true
+  },
   "include": ["./**/*.ts"]
 }
diff --git a/node_modules/@salesforce/dev-scripts/utils/husky-init.js b/node_modules/@salesforce/dev-scripts/utils/husky-init.js
index df35b6e..b9197ce 100644
--- a/node_modules/@salesforce/dev-scripts/utils/husky-init.js
+++ b/node_modules/@salesforce/dev-scripts/utils/husky-init.js
@@ -21,9 +21,9 @@ function initializeHusky() {
       .filter((hook) => hook !== '_');
 
     if (localGitHooks.length === 0) {
-      shell.exec("yarn husky add .husky/commit-msg 'yarn commitlint --edit'");
-      shell.exec("yarn husky add .husky/pre-commit 'yarn lint && yarn pretty-quick --staged'");
-      shell.exec("yarn husky add .husky/pre-push 'yarn build && yarn test --forbid-only'");
+      shell.exec("yarn husky add .husky/commit-msg 'npx commitlint --edit'");
+      shell.exec("yarn husky add .husky/pre-commit 'npm run lint && npx pretty-quick --staged'");
+      shell.exec("yarn husky add .husky/pre-push 'npm run build && npm run test --forbid-only'");
     }
   } catch (err) {
     if (err.code === 'ENOENT') {
diff --git a/node_modules/@salesforce/dev-scripts/utils/package-json.js b/node_modules/@salesforce/dev-scripts/utils/package-json.js
index c1d55c8..24ee631 100644
--- a/node_modules/@salesforce/dev-scripts/utils/package-json.js
+++ b/node_modules/@salesforce/dev-scripts/utils/package-json.js
@@ -41,6 +41,7 @@ class PackageJson {
 
       writeFileSync(this.pjsonPath, pjson);
       log(`wrote changes to ${this.pjsonPath}`, 1);
+      process.exit(1);
     }
   }
 
diff --git a/node_modules/@salesforce/dev-scripts/utils/sf-config.js b/node_modules/@salesforce/dev-scripts/utils/sf-config.js
index 769dbfe..944d00b 100644
--- a/node_modules/@salesforce/dev-scripts/utils/sf-config.js
+++ b/node_modules/@salesforce/dev-scripts/utils/sf-config.js
@@ -31,7 +31,7 @@ const PACKAGE_DEFAULTS = {
       dependencies: ['compile', 'lint'],
     },
     compile: {
-      command: 'tsc -p . --pretty --incremental',
+      command: 'tsc --build --pretty',
       files: ['src/**/*.ts', '**/tsconfig.json', 'messages/**'],
       output: ['lib/**', '*.tsbuildinfo'],
       clean: 'if-file-deleted',
@@ -42,7 +42,7 @@ const PACKAGE_DEFAULTS = {
       output: [],
     },
     lint: {
-      command: 'eslint src test --color --cache --cache-location .eslintcache',
+      command: 'eslint --color --cache --cache-location .eslintcache .',
       files: ['src/**/*.ts', 'test/**/*.ts', 'messages/**', '**/.eslint*', '**/tsconfig.json'],
       output: [],
     },
@@ -56,7 +56,7 @@ const PACKAGE_DEFAULTS = {
       dependencies: ['test:only', 'test:compile'],
     },
     'test:only': {
-      command: 'nyc mocha "test/**/*.test.ts"',
+      command: 'c8 mocha "test/**/*.test.ts"',
       // things that use `chalk` might not output colors with how wireit uses spawn and gha treats that as non-tty
       // see https://github.com/chalk/supports-color/issues/106
       env: {
@@ -81,18 +81,18 @@ const PLUGIN_DEFAULTS = {
   wireit: {
     ...PACKAGE_DEFAULTS.wireit,
     'test:command-reference': {
-      command: `"./bin/dev" commandreference:generate --erroronwarnings`,
+      command: `"./bin/dev.js" commandreference:generate --erroronwarnings`,
       files: ['src/**/*.ts', 'messages/**', 'package.json'],
       output: ['tmp/root'],
     },
     'test:deprecation-policy': {
-      command: '"./bin/dev" snapshot:compare',
+      command: '"./bin/dev.js" snapshot:compare',
       files: ['src/**/*.ts'],
       output: [],
       dependencies: ['compile'],
     },
     'test:json-schema': {
-      command: '"./bin/dev" schema:compare',
+      command: '"./bin/dev.js" schema:compare',
       files: ['src/**/*.ts', 'schemas'],
       output: [],
     },
@@ -129,7 +129,7 @@ const resolveConfig = (path) => {
   const configFromFile = (result && result.config) || {};
 
   if (configFromFile.test?.testsPath) {
-    defaults.wireit['test:only'].command = `nyc mocha "${configFromFile.test.testsPath}"`;
+    defaults.wireit['test:only'].command = `c8 mocha "${configFromFile.test.testsPath}"`;
   }
 
   // Allow users to override certain scripts
@@ -151,6 +151,8 @@ const resolveConfig = (path) => {
   // Remove excluded items
   excludeScripts.forEach((scriptName) => {
     delete config.scripts[scriptName];
+    delete config.wireit[scriptName];
+    config.wireit.test.dependencies = config.wireit.test.dependencies.filter(scriptName => !config['exclude-scripts'].includes(scriptName));
   });
 
   resolvedConfigs[path] = config;
diff --git a/node_modules/@salesforce/dev-scripts/utils/standardize-files.js b/node_modules/@salesforce/dev-scripts/utils/standardize-files.js
index 6a851f6..ac30cf1 100644
--- a/node_modules/@salesforce/dev-scripts/utils/standardize-files.js
+++ b/node_modules/@salesforce/dev-scripts/utils/standardize-files.js
@@ -18,6 +18,9 @@ const FILE_NAME_LICENSE = 'LICENSE.txt';
 const FILE_NAME_GITIGNORE = 'gitignore';
 const FILE_NAME_MOCHARC = 'mocharc.json';
 
+let config;
+let pkgRoot;
+
 function isDifferent(sourcePath, targetPath) {
   try {
     // Using .replace() to normalize line endings across operating systems.
@@ -37,7 +40,7 @@ function copyFile(sourcePath, targetPath, override = false) {
   const fileExists = exists(targetPath);
   const shouldWriteFile = override || !fileExists;
 
-  if (shouldWriteFile && isDifferent(sourcePath, targetPath)) {
+  if (shouldWriteFile && isDifferent(sourcePath, targetPath) && !(config['exclude-files'] || []).some((e) => targetPath === join(pkgRoot,e))) {
     copyFileSync(sourcePath, targetPath);
     return targetPath;
   }
@@ -94,7 +97,8 @@ function writeMocharcJson(targetDir) {
 
 // eslint-disable-next-line complexity
 module.exports = (packageRoot = require('./package-path')) => {
-  const config = resolveConfig(packageRoot);
+  config = resolveConfig(packageRoot);
+  pkgRoot = packageRoot;
   const testPath = join(packageRoot, 'test');
   const scripts = config.scripts;
 
diff --git a/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js b/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
index c28252e..8618241 100644
--- a/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
+++ b/node_modules/@salesforce/dev-scripts/utils/write-dependencies.js
@@ -24,6 +24,7 @@ const nonPjsonDependencyMinimums = new Map([
   ['@oclif/plugin-command-snapshot', '^4.0.2'],
   ['eslint-plugin-sf-plugin', '^1.15.6'],
   ['oclif', '^3.9.0'],
+  ['c8', '^7.14.0'],
 ]);
 
 const getVersionNum = (ver) => (ver.startsWith('^') || ver.startsWith('~') ? ver.slice(1) : ver);
@@ -82,7 +83,6 @@ module.exports = (projectPath) => {
   const requiredDeps = [
     'husky',
     'pretty-quick',
-    'nyc',
     'ts-node',
     'mocha',
     'sinon',
@@ -91,7 +91,7 @@ module.exports = (projectPath) => {
     'eslint-config-salesforce',
     'eslint-config-salesforce-typescript',
     'eslint-config-salesforce-license',
-  ].concat(scripts.format ? ['prettier', '@salesforce/prettier-config'] : []);
+  ].concat(scripts.format ? ['prettier', '@salesforce/prettier-config'] : []).concat(scripts.docs ? ['typedoc', 'typedoc-plugin-missing-exports',] : []);
 
   /**
    * if dev-scripts sees these in devDeps, they'll be removed
@@ -101,7 +101,6 @@ module.exports = (projectPath) => {
     '@commitlint/cli',
     '@commitlint/config-conventional',
     'source-map-support',
-    'typedoc',
     'cz-conventional-changelog',
     'lint-staged',
     'tslint',
@@ -109,8 +108,6 @@ module.exports = (projectPath) => {
     '@types/mocha',
     '@types/node',
     '@types/sinon',
-    'typedoc-plugin-missing-exports',
-    'eslint-plugin-prettier',
   ].concat(scripts.format ? [] : ['prettier', '@salesforce/prettier-config']);
   // removes go before adds because some are "added back"
   bannedDeps.forEach((dep) => remove(dep));
