diff --git a/node_modules/oclif/lib/commands/readme.js b/node_modules/oclif/lib/commands/readme.js
index 586111d..1061143 100644
--- a/node_modules/oclif/lib/commands/readme.js
+++ b/node_modules/oclif/lib/commands/readme.js
@@ -36,11 +36,11 @@ const lodashTemplate = require('lodash.template');
 class Readme extends core_1.Command {
     static description = `adds commands to README.md in current directory
 The readme must have any of the following tags inside of it for it to be replaced or else it will do nothing:
-# Usage
+## Usage
 <!-- usage -->
-# Commands
+## Commands
 <!-- commands -->
-# Table of contents
+## Table of contents
 <!-- toc -->
 
 Customize the code URL prefix by setting oclif.repositoryPrefix in package.json.
@@ -139,7 +139,7 @@ Customize the code URL prefix by setting oclif.repositoryPrefix in package.json.
         const wrapper = new help_compatibility_1.HelpCompatibilityWrapper(help);
         const header = () => {
             const usage = this.commandUsage(config, c);
-            return usage ? `## \`${config.bin} ${usage}\`` : `## \`${config.bin}\``;
+            return usage ? `### \`${config.bin} ${usage}\`` : `### \`${config.bin}\``;
         };
         try {
             // copy c to keep the command ID with colons, see:
@@ -279,13 +279,9 @@ USAGE
         const id = (0, core_1.toConfiguredId)(command.id, config);
         const defaultUsage = () => (0, util_1.compact)([
             id,
-            Object.values(command.args)
-                .filter((a) => !a.hidden)
-                .map((a) => arg(a))
-                .join(' '),
         ]).join(' ');
         const usages = (0, util_1.castArray)(command.usage);
-        return (0, util_1.template)({ command, config })(usages.length === 0 ? defaultUsage() : usages[0]);
+        return (0, util_1.template)({ command, config })(defaultUsage());
     }
     repo(plugin) {
         const pjson = { ...plugin.pjson };
